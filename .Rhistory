container[[counter]] <-  cluster
ac = append(ac, cluster$ac)
counter = counter + 1
}
}
container = list()
ac = c()
counter = 1
for (i in 4:(length(selected))) {
combinations = combn(selected,i)
for (k in 1:ncol(combinations)) {
data_subset = select(data, combinations[,k])
data_subset = na.omit(data_subset)
cluster <- (agnes(data_subset, method="ward"))
container[[counter]] <-  cluster
ac = append(ac, cluster$ac)
counter = counter + 1
}
}
# Get the number of best clustering based on AC score
max_index = which(ac==max(ac))
#Save best clustering
#best_clustering <- (agnes(data_subset, method="ward"))
best_clustering = container[[max_index]]
used_ratios = colnames(best_clustering$data)
res <- array(0,c(6-3+1,2))
res[,1] <- 3:6
clusters <- NULL
for (i in 3:6) {
cl <- pam(best_clustering$data,i)
res[i-3+1,2] <- G1 <- index.G1(best_clustering$data,cl$cluster,centrotypes="centroids")
clusters <- rbind(clusters, cl$cluster)
}
print(paste("max G1 for",(3:6)[which.max(res[,2])],"clusters=",max(res[,2])))
print("clustering for max G1")
plot(res, type="p", pch=0, xlab="Number of clusters", ylab="G1", xaxt="n")
axis(1, c(3:6))
#Create clusters
clust <- cutree(best_clustering, k = 3)
pltree(best_clustering, hang=-1, cex = 0.6)
rect.hclust(best_clustering, k = 3, border = 2:10)
fviz_cluster(list(data = best_clustering$data, cluster = clust), labelsize =7)
results_clustering <- data.frame(
Name=best_clustering$order.lab,
Segment=cutree(best_clustering,3)[best_clustering$order]
)
data_clustering$Name <- rownames(data_clustering)
data_clustering <- data_clustering[order(data_clustering$Name),]
results_clustering <- results_clustering[order(results_clustering$Name),]
results_clustering = cbind(results_clustering, data_clustering)
selected = append("Segment", used_ratios)
results_clustering = select(results_clustering, all_of(selected))
results_clustering["Segment"] <- lapply(results_clustering["Segment"], function(x) as.numeric(x))
Mean.Values <- aggregate(x=results_clustering, by=list(results_clustering$Segment), FUN=mean)
Mean.Values <- select(Mean.Values, all_of(used_ratios))
heatmap(as.matrix(Mean.Values))
View(results_clustering)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
# Preparing data
data = na_if(data, "NA")
data = na.omit(data)
rownames(data) = data$Name
View(data)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
# Preparing data
data = na_if(data, "NA")
data = na.omit(data)
View(data)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
View(data)
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
# Preparing data
data = na_if(data, "NA")
data = na.omit(data)
rownames(data) = data$Name
colnum <- as.vector(colnames(data[2:12]))
# Converting to numeric
data[colnum] <- lapply(data[colnum], function(x) as.numeric(as.character(x)))
# 1. Ratio: Gross Loans (LTA)
data$LTA <- data$Loans / data$TotalAssetes
# 2. Ratio: Trade (TTA)
data$TTA <- (data$TotalAssetes - data$LiquidAssets - data$Loans - data$Intangibles) / data$TotalAssetes
# 4. Ratio: Interbank Lending (ILTA)
#data$ILTA <- (data$LoansAdvances + data$AssetRepos)  / data$TotalAssetes
# 5. Ratio: Interbank Borrowing (IBTA)
data$IBTA <- (data$BankDeposits + data$LiabilityRepos)  / data$TotalAssetes
# 6. Ratio: Wholesale Debt (WDA)
#data$WDA <- (data$OtherDepositsShortBorrowings + data$LongFunding)  / data$TotalAssetes
# 7. Ratio: Stable Funding (SFA)
data$SFA <- (data$CustomerDeposits + data$LongFunding)  / data$TotalAssetes
# 8. Ratio: Deposits (CDA)
data$CDA <- data$CustomerDeposits / data$TotalAssetes
# 9. Ratio: Interest Income (IIO)
data$IIO = data$NetInterestIncome/data$OperatingIncome
#Create data subset
selected =c("LTA", "IBTA", "TTA", "SFA", "CDA", "IIO")
data_clustering = select(data, all_of(selected))
# Creating correllation matrix
matrix <- cor(scale(data_clustering))
corrplot(corr=matrix, method="number", title="Corellation Matrix of Potential Proxies")
#!!!SFA Should be excluded
selected =c("LTA", "IBTA", "TTA", "CDA", "IIO")
data_clustering = select(data, all_of(selected))
container = list()
ac = c()
counter = 1
for (i in 4:(length(selected))) {
combinations = combn(selected,i)
for (k in 1:ncol(combinations)) {
data_subset = select(data, combinations[,k])
data_subset = na.omit(data_subset)
cluster <- (agnes(data_subset, method="ward"))
container[[counter]] <-  cluster
ac = append(ac, cluster$ac)
counter = counter + 1
}
}
# Get the number of best clustering based on AC score
max_index = which(ac==max(ac))
#Save best clustering
#best_clustering <- (agnes(data_subset, method="ward"))
best_clustering = container[[max_index]]
used_ratios = colnames(best_clustering$data)
res <- array(0,c(6-3+1,2))
res[,1] <- 3:6
clusters <- NULL
for (i in 3:6) {
cl <- pam(best_clustering$data,i)
res[i-3+1,2] <- G1 <- index.G1(best_clustering$data,cl$cluster,centrotypes="centroids")
clusters <- rbind(clusters, cl$cluster)
}
print(paste("max G1 for",(3:6)[which.max(res[,2])],"clusters=",max(res[,2])))
print("clustering for max G1")
plot(res, type="p", pch=0, xlab="Number of clusters", ylab="G1", xaxt="n")
axis(1, c(3:6))
#Create clusters
clust <- cutree(best_clustering, k = 3)
pltree(best_clustering, hang=-1, cex = 0.6)
rect.hclust(best_clustering, k = 3, border = 2:10)
fviz_cluster(list(data = best_clustering$data, cluster = clust), labelsize =7)
results_clustering <- data.frame(
Name=best_clustering$order.lab,
Segment=cutree(best_clustering,3)[best_clustering$order]
)
data_clustering$Name <- rownames(data_clustering)
data_clustering <- data_clustering[order(data_clustering$Name),]
results_clustering <- results_clustering[order(results_clustering$Name),]
results_clustering = cbind(results_clustering, data_clustering)
selected = append("Segment", used_ratios)
results_clustering = select(results_clustering, all_of(selected))
results_clustering["Segment"] <- lapply(results_clustering["Segment"], function(x) as.numeric(x))
Mean.Values <- aggregate(x=results_clustering, by=list(results_clustering$Segment), FUN=mean)
Mean.Values <- select(Mean.Values, all_of(used_ratios))
View(results_clustering)
# Clear Environment
rm(list=ls())
# Clear Environment
rm(list=ls())
library(corrplot)
library(cluster)
library(purrr)
library(factoextra)
library(dplyr)
library(dendextend)
library(tidyverse)
library(caret)
library(plyr)
library(fpc)
library(tidyverse)
library(plyr)
library(fpc)
library(MASS)
library(clusterSim)
library(corrplot)
library(cluster)
library(purrr)
library(factoextra)
library(dplyr)
library(dendextend)
library(tidyverse)
library(plyr)
library(fpc)
library(MASS)
library(clusterSim)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
# Preparing data
data = na_if(data, "NA")
data = na.omit(data)
rownames(data) = data$Name
colnum <- as.vector(colnames(data[2:12]))
# Converting to numeric
data[colnum] <- lapply(data[colnum], function(x) as.numeric(as.character(x)))
# 1. Ratio: Gross Loans (LTA)
data$LTA <- data$Loans / data$TotalAssetes
# 2. Ratio: Trade (TTA)
data$TTA <- (data$TotalAssetes - data$LiquidAssets - data$Loans - data$Intangibles) / data$TotalAssetes
# 4. Ratio: Interbank Lending (ILTA)
#data$ILTA <- (data$LoansAdvances + data$AssetRepos)  / data$TotalAssetes
# 5. Ratio: Interbank Borrowing (IBTA)
data$IBTA <- (data$BankDeposits + data$LiabilityRepos)  / data$TotalAssetes
# 6. Ratio: Wholesale Debt (WDA)
#data$WDA <- (data$OtherDepositsShortBorrowings + data$LongFunding)  / data$TotalAssetes
# 7. Ratio: Stable Funding (SFA)
data$SFA <- (data$CustomerDeposits + data$LongFunding)  / data$TotalAssetes
# 8. Ratio: Deposits (CDA)
data$CDA <- data$CustomerDeposits / data$TotalAssetes
# 9. Ratio: Interest Income (IIO)
data$IIO = data$NetInterestIncome/data$OperatingIncome
#Create data subset
selected =c("LTA", "IBTA", "TTA", "SFA", "CDA", "IIO")
data_clustering = select(data, all_of(selected))
# Creating correllation matrix
matrix <- cor(scale(data_clustering))
corrplot(corr=matrix, method="number", title="Corellation Matrix of Potential Proxies")
#!!!SFA Should be excluded
selected =c("LTA", "IBTA", "TTA", "CDA", "IIO")
data_clustering = select(data, all_of(selected))
container = list()
ac = c()
counter = 1
for (i in 4:(length(selected))) {
combinations = combn(selected,i)
for (k in 1:ncol(combinations)) {
data_subset = select(data, combinations[,k])
data_subset = na.omit(data_subset)
cluster <- (agnes(data_subset, method="ward"))
container[[counter]] <-  cluster
ac = append(ac, cluster$ac)
counter = counter + 1
}
}
# Get the number of best clustering based on AC score
max_index = which(ac==max(ac))
#Save best clustering
#best_clustering <- (agnes(data_subset, method="ward"))
best_clustering = container[[max_index]]
used_ratios = colnames(best_clustering$data)
res <- array(0,c(6-3+1,2))
res[,1] <- 3:6
clusters <- NULL
#Create clusters
clust <- cutree(best_clustering, k = 3)
pltree(best_clustering, hang=-1, cex = 0.6)
rect.hclust(best_clustering, k = 3, border = 2:10)
fviz_cluster(list(data = best_clustering$data, cluster = clust), labelsize =7)
pltree(best_clustering, hang=-1, cex = 0.6)
rect.hclust(best_clustering, k = 3, border = 2:10)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
# Preparing data
data = na_if(data, "NA")
data = na.omit(data)
rownames(data) = data$Name
colnum <- as.vector(colnames(data[2:12]))
# Converting to numeric
data[colnum] <- lapply(data[colnum], function(x) as.numeric(as.character(x)))
# 1. Ratio: Gross Loans (LTA)
data$LTA <- data$Loans / data$TotalAssetes
# 2. Ratio: Trade (TTA)
data$TTA <- (data$TotalAssetes - data$LiquidAssets - data$Loans - data$Intangibles) / data$TotalAssetes
# 4. Ratio: Interbank Lending (ILTA)
#data$ILTA <- (data$LoansAdvances + data$AssetRepos)  / data$TotalAssetes
# 5. Ratio: Interbank Borrowing (IBTA)
data$IBTA <- (data$BankDeposits + data$LiabilityRepos)  / data$TotalAssetes
# 6. Ratio: Wholesale Debt (WDA)
#data$WDA <- (data$OtherDepositsShortBorrowings + data$LongFunding)  / data$TotalAssetes
# 7. Ratio: Stable Funding (SFA)
data$SFA <- (data$CustomerDeposits + data$LongFunding)  / data$TotalAssetes
# 8. Ratio: Deposits (CDA)
data$CDA <- data$CustomerDeposits / data$TotalAssetes
# 9. Ratio: Interest Income (IIO)
data$IIO = data$NetInterestIncome/data$OperatingIncome
#Create data subset
selected =c("LTA", "IBTA", "TTA", "SFA", "CDA", "IIO")
data_clustering = select(data, all_of(selected))
# Creating correllation matrix
matrix <- cor(scale(data_clustering))
corrplot(corr=matrix, method="number", title="Corellation Matrix of Potential Proxies")
#!!!SFA Should be excluded
selected =c("LTA", "IBTA", "TTA", "CDA", "IIO")
data_clustering = select(data, all_of(selected))
container = list()
ac = c()
counter = 1
for (i in 4:(length(selected))) {
combinations = combn(selected,i)
for (k in 1:ncol(combinations)) {
data_subset = select(data, combinations[,k])
data_subset = na.omit(data_subset)
cluster <- (agnes(data_subset, method="ward"))
container[[counter]] <-  cluster
ac = append(ac, cluster$ac)
counter = counter + 1
}
}
# Get the number of best clustering based on AC score
max_index = which(ac==max(ac))
#Save best clustering
#best_clustering <- (agnes(data_subset, method="ward"))
best_clustering = container[[max_index]]
used_ratios = colnames(best_clustering$data)
res <- array(0,c(6-3+1,2))
res[,1] <- 3:6
clusters <- NULL
#Create clusters
clust <- cutree(best_clustering, k = 3)
pltree(best_clustering, hang=-1, cex = 0.6)
rect.hclust(best_clustering, k = 3, border = 2:10)
fviz_cluster(list(data = best_clustering$data, cluster = clust), labelsize =7)
results_clustering <- data.frame(
Name=best_clustering$order.lab,
Segment=cutree(best_clustering,3)[best_clustering$order]
)
data_clustering$Name <- rownames(data_clustering)
data_clustering <- data_clustering[order(data_clustering$Name),]
results_clustering <- results_clustering[order(results_clustering$Name),]
results_clustering = cbind(results_clustering, data_clustering)
selected = append("Segment", used_ratios)
results_clustering = select(results_clustering, all_of(selected))
results_clustering["Segment"] <- lapply(results_clustering["Segment"], function(x) as.numeric(x))
Mean.Values <- aggregate(x=results_clustering, by=list(results_clustering$Segment), FUN=mean)
Mean.Values <- select(Mean.Values, all_of(used_ratios))
heatmap(as.matrix(Mean.Values))
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
# Clear Environment
rm(list=ls())
library(corrplot)
library(cluster)
library(purrr)
library(factoextra)
library(dplyr)
library(dendextend)
library(tidyverse)
library(plyr)
library(fpc)
library(MASS)
library(clusterSim)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
View(data)
data = select(data, all_of(selected))
library(dplyr)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
install.packages("dplyr")
library(corrplot)
library(cluster)
library(purrr)
library(factoextra)
library(dplyr)
library(dendextend)
library(tidyverse)
library(plyr)
library(fpc)
library(MASS)
library(clusterSim)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = select(data, all_of(selected))
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = dplyr::select(data, all_of(selected))
library(corrplot)
library(cluster)
library(purrr)
library(factoextra)
library(dplyr)
library(dendextend)
library(tidyverse)
library(plyr)
library(fpc)
library(MASS)
library(clusterSim)
# Reading in data
data <- read.csv('data1.csv', sep = ';')
selected =c("Name","LoansAdvances", "LiabilityRepos", "BankDeposits", "LongFunding", "CustomerDeposits", "LiquidAssets", "Loans", "Intangibles", "NetInterestIncome", "OperatingIncome", "Equity", "TotalAssetes")
data = dplyr::select(data, all_of(selected))
# Preparing data
data = na_if(data, "NA")
data = na.omit(data)
rownames(data) = data$Name
colnum <- as.vector(colnames(data[2:12]))
# Converting to numeric
data[colnum] <- lapply(data[colnum], function(x) as.numeric(as.character(x)))
# 1. Ratio: Gross Loans (LTA)
data$LTA <- data$Loans / data$TotalAssetes
# 2. Ratio: Trade (TTA)
data$TTA <- (data$TotalAssetes - data$LiquidAssets - data$Loans - data$Intangibles) / data$TotalAssetes
# 4. Ratio: Interbank Lending (ILTA)
#data$ILTA <- (data$LoansAdvances + data$AssetRepos)  / data$TotalAssetes
# 5. Ratio: Interbank Borrowing (IBTA)
data$IBTA <- (data$BankDeposits + data$LiabilityRepos)  / data$TotalAssetes
# 6. Ratio: Wholesale Debt (WDA)
#data$WDA <- (data$OtherDepositsShortBorrowings + data$LongFunding)  / data$TotalAssetes
# 7. Ratio: Stable Funding (SFA)
data$SFA <- (data$CustomerDeposits + data$LongFunding)  / data$TotalAssetes
# 8. Ratio: Deposits (CDA)
data$CDA <- data$CustomerDeposits / data$TotalAssetes
# 9. Ratio: Interest Income (IIO)
data$IIO = data$NetInterestIncome/data$OperatingIncome
#Create data subset
selected =c("LTA", "IBTA", "TTA", "SFA", "CDA", "IIO")
data_clustering = select(data, all_of(selected))
# Creating correllation matrix
matrix <- cor(scale(data_clustering))
#Create data subset
selected =c("LTA", "IBTA", "TTA", "SFA", "CDA", "IIO")
data_clustering = dplyr::select(data, all_of(selected))
# Creating correllation matrix
matrix <- cor(scale(data_clustering))
corrplot(corr=matrix, method="number", title="Corellation Matrix of Potential Proxies")
#!!!SFA Should be excluded
selected =c("LTA", "IBTA", "TTA", "CDA", "IIO")
data_clustering = dplyr::select(data, all_of(selected))
container = list()
ac = c()
counter = 1
for (i in 4:(length(selected))) {
combinations = combn(selected,i)
for (k in 1:ncol(combinations)) {
data_subset = select(data, combinations[,k])
data_subset = na.omit(data_subset)
cluster <- (agnes(data_subset, method="ward"))
container[[counter]] <-  cluster
ac = append(ac, cluster$ac)
counter = counter + 1
}
}
container = list()
ac = c()
counter = 1
for (i in 4:(length(selected))) {
combinations = combn(selected,i)
for (k in 1:ncol(combinations)) {
data_subset = dplyr::select(data, combinations[,k])
data_subset = na.omit(data_subset)
cluster <- (agnes(data_subset, method="ward"))
container[[counter]] <-  cluster
ac = append(ac, cluster$ac)
counter = counter + 1
}
}
# Get the number of best clustering based on AC score
max_index = which(ac==max(ac))
#Save best clustering
#best_clustering <- (agnes(data_subset, method="ward"))
best_clustering = container[[max_index]]
used_ratios = colnames(best_clustering$data)
res <- array(0,c(6-3+1,2))
res[,1] <- 3:6
clusters <- NULL
#Create clusters
clust <- cutree(best_clustering, k = 3)
pltree(best_clustering, hang=-1, cex = 0.6)
rect.hclust(best_clustering, k = 3, border = 2:10)
libray(rvest)
install.packages(rvest)
install.packages('rvest')
install.packages("rvest")
url <- "https://en.wikipedia.org/wiki/List_of_largest_banks"
webpage <- read_html(url)
webpage <- rvest::read_html(url)
read_html?
?read_html
webpage <- read_html(url)
webpage <- read_html(url)
library(XML)
doc <- readHTMLTable(
doc="https://en.wikipedia.org/wiki/List_of_largest_banks")
doc[[6]]
doc <- readHTMLTable(
doc="https://en.wikipedia.org/wiki/List_of_largest_banks")
doc[[6]]
doc <- readHTMLTable(doc="https://en.wikipedia.org/wiki/List_of_largest_banks")
doc <- readHTMLTable(doc="https://en.wikipedia.org/wiki/List_of_largest_banks")
?readHTMLTable
doc <- readHTMLTable(doc="http://en.wikipedia.org/wiki/List_of_largest_banks")
doc <- readHTMLTable(doc=rawToChar(GET("http://en.wikipedia.org/wiki/List_of_largest_banks")$content))
library(httr)
doc <- readHTMLTable(doc=rawToChar(GET("http://en.wikipedia.org/wiki/List_of_largest_banks")$content))
?readoc[[6]]
library(httr)
doc <- readHTMLTable(doc=rawToChar(GET("http://en.wikipedia.org/wiki/List_of_largest_banks")$content))
View(doc)
doc[["NULL"]]
doc[["Number of banks in the top 100 by total assets [1]"]]
doc[["Total market capital (US$ billion) across the top 70 banks by country
"]]
